<?php

namespace HazAClass\System;

require_once dirname(__FILE__).'/../../../HazAClass/System/Type.php';

/**
 * Test class for Type.
 * Generated by PHPUnit on 2011-03-09 at 11:11:56.
 */
class TypeTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var TestObject
	 */
	protected $object;
	/**
	 * @var Type
	 */
	protected $type;

	protected function setUp()
	{
		$this->object = new TestObject();
		$this->type = $this->object->GetType();
	}

	protected function tearDown()
	{
		$this->object = null;
	}

	public function testTypeOf()
	{
		$this->assertInstanceOf(Type::$classname, typeof(TestObject::$classname));
		$this->assertSame($this->object->GetType(), typeof(TestObject::$classname));
	}

	public function testGetFullName()
	{
		$this->assertEquals(get_class($this->object), $this->type->GetFullName());
	}

	public function testImplementsInterface()
	{
		$this->assertTrue($this->type->ImplementsInterface(TestInterface::TestInterface));
	}

	public function testIsTypeOf()
	{
		$this->assertTrue($this->type->IsTypeOf(typeof(TestObject::$classname)));
		$this->assertTrue($this->type->IsTypeOf(typeof(Object::$classname)));
	}

	public function testIsSubClass()
	{
		$this->assertFalse($this->type->IsSubClass(TestObject::$classname));
		$this->assertTrue($this->type->IsSubClass(Object::$classname));
	}

	public function testGetReflectionClass()
	{
		$this->assertTrue($this->type->GetReflectionClass() !== null);
		$this->assertInstanceOf('\\ReflectionClass', $this->type->GetReflectionClass());
	}

	public function testGetReflectionObject()
	{
		$this->assertTrue($this->type->GetReflectionObject($this->object) !== null);
		$this->assertInstanceOf('\\ReflectionObject', $this->type->GetReflectionObject($this->object));
	}

	public function testSetterOf()
	{
		$this->assertEquals('SetTestProp', $this->type->SetterOf('testProp'));
	}

	public function testGetterOf()
	{
		$this->assertEquals('GetTestProp', $this->type->GetterOf('testProp'));
	}

	public function testStaticMethod()
	{
		$this->assertEquals(TestObject::$classname.'::TestMethod', $this->type->StaticMethod('TestMethod'));
	}

	public function testMethod()
	{
		$this->assertEquals(TestObject::$classname.'->TestMethod', $this->type->Method('TestMethod'));
	}

	public function testConstant()
	{
		$this->assertEquals(TestObject::$classname.'::TEST_CONST', $this->type->Constant('TEST_CONST'));
	}

	public function testIsInNamespace()
	{
		$this->assertTrue($this->type->IsInNamespace());
	}

	public function testGetNamespaceName()
	{
		$this->assertEquals('\\HazAClass\\System', $this->type->GetNamespaceName());
	}

	public function testGetShortName()
	{
		$this->assertEquals('TestObject', $this->type->GetShortName());
	}

	public function testGetDirectory()
	{
		$this->assertEquals(__DIR__, $this->type->GetDirectory());
	}

	public function testGetFileName()
	{
		$this->assertEquals(__FILE__, $this->type->GetFileName());
	}

}

class TestObject extends Object implements TestInterface
{

	public static $classname = __CLASS__;

}

interface TestInterface
{
	const TestInterface = __CLASS__;
}

?>

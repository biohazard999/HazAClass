<?php

namespace HazAClass\System\Reflection;

use HazAClass\System\Reflection\TestAttributes\TestAttribute;
use HazAClass\System\Reflection\TestAttributes\TestNamedAttribute;
use HazAClass\System\Reflection\TestAttributes\TestMixedAttribute;
use HazAClass\System\Collection\IList;

require_once dirname(__FILE__).'/../../../../HazAClass/System/Reflection/ReflectionClass.php';

/**
 * Test class for ReflectionClass.
 * Generated by PHPUnit on 2011-03-17 at 10:28:48.
 */
class ReflectionClassTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var ReflectionTestClass
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new ReflectionTestClass();
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		$this->object = null;
	}

	/**
	 * @todo Implement testHasAttribute().
	 */
	public function testHasAttributeNormal()
	{
		$this->assertTrue($this->object->GetType()->GetReflectionClass()->HasAttribute(TestAttribute::$classname));
	}

	public function testHasAttributeNamed()
	{
		$this->assertTrue($this->object->GetType()->GetReflectionClass()->HasAttribute(TestNamedAttribute::$classname));
	}

	public function testHasAttributeMixed()
	{
		$this->assertTrue($this->object->GetType()->GetReflectionClass()->HasAttribute(TestMixedAttribute::$classname));
	}

	public function testGetAttributeNormal()
	{
		$this->assertInstanceOf(TestAttribute::$classname, $this->object->GetType()->GetReflectionClass()->GetAttribute(TestAttribute::$classname));
	}

	public function testGetAttributeNamed()
	{
		$this->assertInstanceOf(TestNamedAttribute::$classname, $this->object->GetType()->GetReflectionClass()->GetAttribute(TestNamedAttribute::$classname));
	}

	public function testGetAttributeMixed()
	{
		$this->assertInstanceOf(TestMixedAttribute::$classname, $this->object->GetType()->GetReflectionClass()->GetAttribute(TestMixedAttribute::$classname));
	}

	public function testGetAttributes()
	{
		$this->assertInstanceOf(IList::IList, $this->object->GetType()->GetReflectionClass()->GetAttributes());
	}

	/**
	 * @todo Implement testGetConstructor().
	 */
	public function testGetConstructor()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testGetMethod().
	 */
	public function testGetMethod()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testGetMethods().
	 */
	public function testGetMethods()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testGetProperty().
	 */
	public function testGetProperty()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testGetProperties().
	 */
	public function testGetProperties()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testGetInterfaces().
	 */
	public function testGetInterfaces()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testGetParentClass().
	 */
	public function testGetParentClass()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testGetUsings().
	 */
	public function testGetUsings()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
			'This test has not been implemented yet.'
		);
	}

}

?>
